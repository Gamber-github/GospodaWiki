// <auto-generated />
using System;
using GospodaWiki.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GospodaWiki.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GospodaWiki.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("GospodaWiki.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("GospodaWiki.Models.CharacterAbility", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("CharacterAbilities");
                });

            modelBuilder.Entity("GospodaWiki.Models.CharacterEquipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterEquipments");
                });

            modelBuilder.Entity("GospodaWiki.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("GospodaWiki.Models.RpgSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RpgSystems");
                });

            modelBuilder.Entity("GospodaWiki.Models.RpgSystemCharacter", b =>
                {
                    b.Property<int>("CharcterId")
                        .HasColumnType("int");

                    b.Property<int>("RpgSystemId")
                        .HasColumnType("int");

                    b.HasKey("CharcterId", "RpgSystemId");

                    b.HasIndex("RpgSystemId");

                    b.ToTable("RpgSystemCharacters");
                });

            modelBuilder.Entity("GospodaWiki.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RpgSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RpgSystemId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GospodaWiki.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GospodaWiki.Models.CharacterAbility", b =>
                {
                    b.HasOne("GospodaWiki.Models.Ability", "Ability")
                        .WithMany("CharacterAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospodaWiki.Models.Character", "Character")
                        .WithMany("CharacterAbilities")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GospodaWiki.Models.CharacterEquipment", b =>
                {
                    b.HasOne("GospodaWiki.Models.Character", "Character")
                        .WithMany("CharacterEquipments")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospodaWiki.Models.Equipment", "Equipment")
                        .WithMany("CharacterEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("GospodaWiki.Models.RpgSystemCharacter", b =>
                {
                    b.HasOne("GospodaWiki.Models.Character", "Character")
                        .WithMany("RpgSystemCharacters")
                        .HasForeignKey("CharcterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospodaWiki.Models.RpgSystem", "RpgSystem")
                        .WithMany("RpgSystemCharacters")
                        .HasForeignKey("RpgSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("RpgSystem");
                });

            modelBuilder.Entity("GospodaWiki.Models.Tag", b =>
                {
                    b.HasOne("GospodaWiki.Models.Character", null)
                        .WithMany("Tags")
                        .HasForeignKey("CharacterId");

                    b.HasOne("GospodaWiki.Models.RpgSystem", null)
                        .WithMany("Tags")
                        .HasForeignKey("RpgSystemId");
                });

            modelBuilder.Entity("GospodaWiki.Models.Ability", b =>
                {
                    b.Navigation("CharacterAbilities");
                });

            modelBuilder.Entity("GospodaWiki.Models.Character", b =>
                {
                    b.Navigation("CharacterAbilities");

                    b.Navigation("CharacterEquipments");

                    b.Navigation("RpgSystemCharacters");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("GospodaWiki.Models.Equipment", b =>
                {
                    b.Navigation("CharacterEquipments");
                });

            modelBuilder.Entity("GospodaWiki.Models.RpgSystem", b =>
                {
                    b.Navigation("RpgSystemCharacters");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
